{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","userName","nanoid","App","useState","message","setMessage","chat","setchat","useEffect","on","payload","className","map","index","onSubmit","e","preventDefault","emit","type","name","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAOMA,EAASC,IAAGC,QAAQ,yBAEpBC,EAAWC,YAAO,GA6CTC,MA1Cf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAeA,OAPAC,qBAAU,WACRX,EAAOY,GAAG,QAAQ,SAACC,GACjBH,EAAQ,GAAD,mBAAKD,GAAL,CAAWI,WAMpB,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,6CACCL,EAAKM,KAAI,SAACF,EAASG,GAClB,OACE,8BAAgBH,EAAQN,QAAxB,KAAkC,wCAAWM,EAAQV,cAA7Ca,MAGZ,uBAAMC,SAtBK,SAACC,GAChBA,EAAEC,iBACFnB,EAAOoB,KAAK,OAAQ,CAACb,UAASJ,aAC9BK,EAAW,KAmBP,UACE,uBAAOa,KAAK,OAAOC,KAAK,OACxBC,YAAY,YACZC,MAAOjB,EACPkB,SAAU,SAACP,GACTV,EAAWU,EAAEQ,OAAOF,UAGtB,wBAAQH,KAAK,SAAb,2BCnCKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67df116d.chunk.js","sourcesContent":["\nimport './App.css';\nimport {useState, useEffect} from 'react';\nimport io from 'socket.io-client';\nimport {nanoid} from \"nanoid\";\n\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst userName = nanoid(4);\n\n\nfunction App() {\n\n  const [message, setMessage] = useState('');\n  const [chat, setchat] = useState([]);\n\n  const sendChat = (e) => {\n    e.preventDefault();\n    socket.emit(\"chat\", {message, userName});\n    setMessage('');\n  };\n\n  useEffect(() => {\n    socket.on(\"chat\", (payload) => {\n      setchat([...chat, payload]);\n    });\n  });\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CHATONE APP</h1>\n        {chat.map((payload, index) => {\n          return(\n            <p key={index}>{payload.message}: <span>id: {payload.userName}</span></p>\n          );\n        })}\n        <form onSubmit={sendChat}>\n          <input type=\"text\" name=\"chat\"\n          placeholder=\"send text\"\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value)\n          }}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}